{"version":3,"sources":["TodoList.js","CompletedList.js","Todos.js","App.js","index.js"],"names":["TodoList","props","react_default","a","createElement","className","list","map","item","key","id","type","checked","complete","onChange","handleToggle","todoItem","onClick","handleDeleteItem","CompletedList","Todos","state","todos","input","handleChange","e","value","target","_this","setState","handleAddTodo","prevState","idTimeStamp","Date","concat","getTime","completed","alert","handleClearTodo","todoItemId","filter","localStorage","getItem","this","JSON","parse","setItem","stringify","rel","href","name","placeholder","required","src_TodoList","itemTodo","src_CompletedList","Component","App","src_Todos","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yNAsBeA,EApBE,SAACC,GAChB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXJ,EAAMK,KAAKC,IAAK,SAAAC,GAAI,OACnBN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAKE,GAAIL,UAAU,0BAC1BH,EAAAC,EAAAC,cAAA,SAAOO,KAAK,WACVC,QAASJ,EAAKK,SACdC,SAAU,kBAAMb,EAAMc,aAAaP,EAAKE,OAE1CR,EAAAC,EAAAC,cAAA,YAAOI,EAAKQ,UACZd,EAAAC,EAAAC,cAAA,UAAQa,QAAS,kBAAMhB,EAAMiB,iBAAiBV,EAAKE,MAAnD,aCGGS,EAfO,SAAClB,GACrB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXJ,EAAMK,KAAKC,IAAK,SAAAC,GAAI,OACnBN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAKE,GAAIL,UAAU,kBAC1BH,EAAAC,EAAAC,cAAA,YAAOI,EAAKQ,gBC2FTI,6MA/FbC,MAAQ,CACNC,MAAO,GACPC,MAAO,MAYTC,aAAe,SAAAC,GAAK,IACZC,EAAUD,EAAEE,OAAZD,MACNE,EAAKC,SAAS,CACZN,MAAOG,OAGXI,cAAgB,WACdF,EAAKC,SAAS,SAAAE,GACZ,GAAyB,KAArBH,EAAKP,MAAME,MAAa,CAC1B,IAAIS,EAAc,IAAIC,KACtB,MAAO,CACLX,MAAOS,EAAUT,MAAMY,OAAO,CAAC,CAC7BlB,SAAUY,EAAKP,MAAME,MACrBb,GAAIsB,EAAYG,UAChBC,WAAW,KAEbb,MAAO,IAGTc,MAAM,+BAIZC,gBAAkB,WAChBV,EAAKC,SAAS,CACZP,MAAO,QAGXP,aAAe,SAACwB,GACdX,EAAKC,SAAU,SAAAE,GAOb,MAAO,CACLT,MAPiBS,EAAUT,MAAMf,IAAI,SAAAC,GAIrC,OAHGA,EAAKE,KAAO6B,IACb/B,EAAK4B,WAAa5B,EAAK4B,WAElB5B,UAQbU,iBAAmB,SAACqB,GAClBX,EAAKC,SAAS,SAAAE,GAEZ,MAAO,CACLT,MAFiBS,EAAUT,MAAMkB,OAAQ,SAAAhC,GAAI,OAAIA,EAAKE,KAAO6B,2FArDtB,MAAvCE,aAAaC,QAAQ,gBACvBC,KAAKd,SAAS,CACZP,MAAOsB,KAAKC,MAAMJ,aAAaC,QAAQ,+DAK3CD,aAAaK,QAAQ,cAAeF,KAAKG,UAAUJ,KAAKtB,MAAMC,yCAqD9D,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,yBAAgBF,EAAAC,EAAAC,cAAA,KAAG4C,IAAI,sBAAsBC,KAAK,8CAA8CtB,OAAO,UAAvF,qBAAhB,KAEAzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEO,KAAK,OACLuC,KAAK,WACLC,YAAY,6BACZzB,MAAOiB,KAAKtB,MAAME,MAClBT,SAAU6B,KAAKnB,aACf4B,UAAQ,IAEVlD,EAAAC,EAAAC,cAAA,UAAQa,QAAS0B,KAAKb,eAAtB,OACA5B,EAAAC,EAAAC,cAAA,UAAQa,QAAS0B,KAAKL,iBAAtB,SACApC,EAAAC,EAAAC,cAACiD,EAAD,CACE/C,KAAQqC,KAAKtB,MAAMC,MAAMkB,OAAO,SAAAc,GAAQ,OAAKA,EAASlB,YACtDrB,aAAgB4B,KAAK5B,aACrBG,iBAAoByB,KAAKzB,mBAE3BhB,EAAAC,EAAAC,cAACmD,EAAD,CACEjD,KAAMqC,KAAKtB,MAAMC,MAAMkB,OAAO,SAAAc,GAAQ,OAAIA,EAASlB,sBAvFzCoB,aCQLC,0LANT,OACEvD,EAAAC,EAAAC,cAACsD,EAAD,aAHUF,cCElBG,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b16d44fc.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoList = (props) => {\n  return (\n    <div>\n      <h2>My To Do List:</h2>\n      <ul className=\"todo-list\">\n        {props.list.map( item => (\n          <li key={item.id} className=\"todo-list-item gridded\">\n            <input type=\"checkbox\"\n              checked={item.complete}\n              onChange={() => props.handleToggle(item.id)}\n            />\n            <span>{item.todoItem}</span>\n            <button onClick={() => props.handleDeleteItem(item.id)}> X </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n\n}\nexport default TodoList;","import React from 'react';\n\nconst CompletedList = (props) => {\n  return (\n    <div>\n      <h2>My Completed List:</h2>\n      <ul className=\"todo-list\">\n        {props.list.map( item => (\n          <li key={item.id} className=\"todo-list-item\">\n            <span>{item.todoItem}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default CompletedList;","import React, { Component } from 'react';\nimport TodoList from './TodoList';\nimport CompletedList from './CompletedList';\n\nclass Todos extends Component {\n  state = {\n    todos: [],\n    input: ''\n  };\n  componentDidMount() {\n    if (localStorage.getItem('myTodosList') != null) {\n      this.setState({\n        todos: JSON.parse(localStorage.getItem('myTodosList')) \n      })\n    }\n  };\n  componentDidUpdate() {\n    localStorage.setItem('myTodosList', JSON.stringify(this.state.todos))\n  };\n  handleChange = e => {\n    let { value } = e.target;\n    this.setState({\n      input: value\n    })\n  };\n  handleAddTodo = () => {\n    this.setState(prevState => {\n      if (this.state.input !== ''){\n        let idTimeStamp = new Date();\n        return {\n          todos: prevState.todos.concat([{\n            todoItem: this.state.input,\n            id: idTimeStamp.getTime(),\n            completed: false\n          }]),\n          input: ''\n        }\n      } else {\n        alert(\"Enter something to do.\");\n      }\n    })\n  };\n  handleClearTodo = () => {\n    this.setState({\n      todos: []\n    });\n  };\n  handleToggle = (todoItemId) => {\n    this.setState( prevState => {\n      let updatedTodos = prevState.todos.map(item => {\n        if(item.id === todoItemId) {\n          item.completed = !item.completed\n        }\n        return item;\n      });\n      return {\n        todos: updatedTodos\n      }\n\n    })\n  };\n  handleDeleteItem = (todoItemId) => {\n    this.setState(prevState => {\n      let updatedTodos = prevState.todos.filter( item => item.id !== todoItemId);\n      return {\n        todos: updatedTodos\n      }\n    })\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <p>View Code on <a rel=\"noopener noreferrer\" href=\"https://github.com/bbruthbar/react-todo-app\" target=\"_blank\">\n        My Github account</a>.</p>\n        <hr />\n        <input\n          type=\"text\"\n          name=\"todoItem\"\n          placeholder=\"Enter what you gotta do...\"\n          value={this.state.input}\n          onChange={this.handleChange}\n          required\n        />\n        <button onClick={this.handleAddTodo}>Add</button>\n        <button onClick={this.handleClearTodo}>Clear</button>\n        <TodoList \n          list = {this.state.todos.filter(itemTodo => !itemTodo.completed)} \n          handleToggle = {this.handleToggle}\n          handleDeleteItem = {this.handleDeleteItem}\n        />\n        <CompletedList\n          list={this.state.todos.filter(itemTodo => itemTodo.completed)}\n        />\n      </div>\n    )\n\n  }\n\n}\n\nexport default Todos;","import React, { Component } from 'react';\nimport Todos from './Todos';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n      return (\n        <Todos />\n      )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}